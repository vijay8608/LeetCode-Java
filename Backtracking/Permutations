class Solution {
    public List<List<Integer>> permute(int[] nums) {
        
        List<List<Integer>> list = new ArrayList<>();
        
        ArrayList<Integer> arr = new ArrayList<>();
        
        for ( int i = 0 ; i < nums.length ; i++){
            arr.add(nums[i]);
        }
        
        permuteHelper(arr, list, new ArrayList<>());
        
        return list;
    }
    
    public void permuteHelper(List<Integer> arr, List<List<Integer>> list, List<Integer> chosen){
        
        if (arr.size() == 0){
            list.add(new ArrayList<>(chosen));
        }else {
            
          for ( int i = 0 ; i < arr.size() ; i++){
              
              // choose
              int temp = arr.get(i);
              chosen.add(temp);
              arr.remove(i);
              
              // explore
              permuteHelper(arr,list,chosen);
              
              // un-choose
              chosen.remove(chosen.size()-1);
              arr.add(i,temp);
              
          }
        }
    }
}